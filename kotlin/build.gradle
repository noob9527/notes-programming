buildscript {
    ext {
        kotlin_version = '1.8.20'
        junit_platform_version = '1.0.2'
        junit_jupiter_version = '5.0.2'
        jackson_kotlin_module_version = '2.9.0'
        rx_kotlin_version = '2.3.0'
    }

    ext.repos = {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        jcenter()
        mavenCentral()
    }
    repositories repos

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath("org.jetbrains.kotlin:kotlin-noarg:$kotlin_version")
        classpath("org.junit.platform:junit-platform-gradle-plugin:$junit_platform_version")
    }
}

//plugins {
//    id 'org.jetbrains.kotlin.jvm'
//}

apply plugin: 'kotlin'
apply plugin: 'kotlin-noarg'
//apply plugin: 'org.junit.platform.gradle.plugin'

group 'cn.staynoob'
version '1.0-SNAPSHOT'

// this is necessary if you want to put java source code in the kotlin directory
sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
}

noArg {
    annotation("cn.staynoob.trap.kotlin.basic.utils.NoArgConstructor")
}

repositories repos

allprojects {
    repositories repos
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testImplementation("org.nd4j:nd4j-native-platform:1.0.0-alpha")
    testImplementation("com.fasterxml.jackson.module:jackson-module-kotlin:${jackson_kotlin_module_version}")
    testImplementation("ma.glasnost.orika:orika-core:1.5.0")
    testImplementation("io.reactivex.rxjava2:rxkotlin:$rx_kotlin_version")

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junit_jupiter_version}")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:${junit_jupiter_version}")

    // scripting
    testImplementation("org.jetbrains.kotlin:kotlin-scripting-common")
    testImplementation("org.jetbrains.kotlin:kotlin-scripting-jvm")
//    testImplementation("org.jetbrains.kotlin:kotlin-scripting-dependencies")
//    testImplementation("org.jetbrains.kotlin:kotlin-scripting-dependencies-maven")
    testImplementation("org.jetbrains.kotlin:kotlin-scripting-jvm-host")
    testImplementation("org.jetbrains.kotlin:kotlin-compiler-embeddable")

    // scripting jsr223
    testRuntimeOnly("org.jetbrains.kotlin:kotlin-scripting-jsr223:$kotlin_version")

    // To avoid compiler warnings about @API annotations in JUnit code
    testImplementation('org.apiguardian:apiguardian-api:1.0.0')
    testImplementation 'org.assertj:assertj-core:3.8.0'
    testImplementation 'org.mockito:mockito-inline:4.11.0'
//    testCompile "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
}
